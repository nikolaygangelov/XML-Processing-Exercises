using Newtonsoft.Json;
using ProductShop.Data;
using ProductShop.DTOs.Export;
using ProductShop.DTOs.Import;
using ProductShop.Models;
using System.Xml.Serialization;

namespace ProductShop
{
    public class StartUp
    {
        public static void Main()
        {
            string inputXml = @"..\..\..\Datasets\categories-products.xml";

            ProductShopContext context = new ProductShopContext();

            Console.WriteLine(ImportCategoryProducts(context, inputXml));
        }

        public static string ImportCategoryProducts(ProductShopContext context, string inputXml)
        {
        // using Data Transfer Object Class to map it with CategoryProducts
            var serializer = new XmlSerializer(typeof(ImportCategoryProductsDTO[]), new XmlRootAttribute("CategoryProducts"));

        // Deserialize method needs TextReader object to convert/map
            var categoryProductsArrayDTOs = (ImportCategoryProductsDTO[])serializer.Deserialize(new StreamReader(inputXml));

        // using identical properties in order to map successfully
            var categoryProductsArray = categoryProductsArrayDTOs
                .Select(cp => new CategoryProduct
                {
                    CategoryId = cp.CategoryId,
                    ProductId = cp.ProductId,
                }).ToArray();

        // AddRange method allows you to add a collection to context
            context.AddRange(categoryProductsArray);
            context.SaveChanges();

            return $"Successfully imported {categoryProductsArray.Length}";
        }
    }
}
